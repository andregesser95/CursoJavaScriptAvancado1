{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dados","value","push","Negociacao","_data","_quantidade","_valor","continue","targe","name","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AACjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,UAAU,MAAKN,WAAL,CACTO,WADS,CACG,CAAC,MAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,MAAKP,MAFR,EAGTQ,GAHS,CAGLP,UAHK,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,6BAFD;;AAIAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,2CAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;;AAEpB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAID,KAAJ,EAAW;AACP,wCAAIE,QAAQF,MAAMG,KAAlB;;AAEAJ,gDAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,MAAMI,KAArB,EAA4BJ,MAAMK,WAAlC,EAA+CL,MAAMM,MAArD,CAAjB;;AAEAR,0CAAMS,QAAN;AACH,iCAND,MAMO;AACHzB,4CAAQe,WAAR;AACH;AAEJ,6BAdD;;AAgBAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEgB,KAAF,CAAQd,KAAR,CAAce,IAA1B;AACA1B,uCAAO,wCAAP;AACH,6BAHD;AAKH,yBA9BM,CAAP;AA+BH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT+B,KAHS,EAAd;;AAKA1B,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,kCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEgB,KAAF,CAAQd,KAApB;AACAX,uCAAO,wCAAP;AACH,6BAHD;AAKH,yBAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["export class NegociacaoDao {\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível adicionar uma negociação');\r\n            };\r\n        });\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = e => {\r\n\r\n                let atual = e.target.result;\r\n\r\n                if (atual) {\r\n                    let dados = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dados._data, dados._quantidade, dados._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n\r\n            }\r\n\r\n            cursor.onerror = e => {\r\n                console.log(e.targe.error.name);\r\n                reject('Não foi possível listar as negociações');\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n            request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.targe.error);\r\n                reject('Não foi possível apagar as negociações');\r\n            }\r\n\r\n        })\r\n    }\r\n}"]}